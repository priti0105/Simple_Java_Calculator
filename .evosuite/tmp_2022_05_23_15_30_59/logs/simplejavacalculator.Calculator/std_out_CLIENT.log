* Starting client
* Connecting to master process on port 15602
* Analyzing classpath: 
  - C:\Priti\Simple_Java_Calculator\target\test-classes
  - C:\Priti\Simple_Java_Calculator\target\classes
  - C:\Users\vishp\.m2\repository\junit\junit\4.12\junit-4.12.jar
  - C:\Users\vishp\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar
  - C:\Users\vishp\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.0-M1\junit-jupiter-api-5.9.0-M1.jar
  - C:\Users\vishp\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar
  - C:\Users\vishp\.m2\repository\org\junit\platform\junit-platform-commons\1.9.0-M1\junit-platform-commons-1.9.0-M1.jar
  - C:\Users\vishp\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar
  - C:\Users\vishp\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.2\junit-jupiter-engine-5.7.2.jar
  - C:\Users\vishp\.m2\repository\org\junit\platform\junit-platform-engine\1.7.2\junit-platform-engine-1.7.2.jar
* Finished analyzing classpath
* Generating tests for class simplejavacalculator.Calculator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
[MASTER] 15:33:09.433 [pool-2-thread-1] WARN  TestSuiteSerialization - Cannot load tests because file does not exist: C:\Priti\Simple_Java_Calculator\.evosuite\evosuite-seeds\simplejavacalculator.Calculator.seed
* Loaded 0 tests from C:\Priti\Simple_Java_Calculator\.evosuite\evosuite-seeds\simplejavacalculator.Calculator.seed
* Total number of test goals: 
  - Line 54
  - Branch 45
  - Exception 0
  - MutationFactory 112
  - Output 92
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 45
* Using seed 1653312784449
* Starting evolution
* Search finished after 86s and 672 generations, 294491 statements, best individual has fitness: 26.14285714050297
* Writing sequences to pool
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 54
* Number of covered goals: 53
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 112
* Number of covered goals: 110
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 82%
* Total number of goals: 92
* Number of covered goals: 75
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Generated 29 tests with total length 139
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
* Writing JUnit test case 'Calculator_ESTest' to C:\Priti\Simple_Java_Calculator\.evosuite\tmp_2022_05_23_15_30_59\tests
* Done!

